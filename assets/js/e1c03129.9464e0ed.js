"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[996],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,d=u["".concat(s,".").concat(m)]||u[m]||f[m]||l;return r?a.createElement(d,o(o({ref:t},c),{},{components:r})):a.createElement(d,o({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7183:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const l={slug:"/file-formats/pal",title:"PAL"},o=void 0,i={unversionedId:"file-formats/PAL",id:"file-formats/PAL",title:"PAL",description:"This document describes the PAL file format used in the Ragnarok Online client.",source:"@site/docs/file-formats/PAL.md",sourceDirName:"file-formats",slug:"/file-formats/pal",permalink:"/file-formats/pal",draft:!1,editUrl:"https://github.com/RagnarokResearchLab/ragnarokresearchlab.github.io/edit/main/docs/file-formats/PAL.md",tags:[],version:"current",frontMatter:{slug:"/file-formats/pal",title:"PAL"},sidebar:"tutorialSidebar",previous:{title:"LUB (Placeholder)",permalink:"/file-formats/lub"},next:{title:"RGZ (Placeholder)",permalink:"/file-formats/RGZ"}},s={},p=[{value:"Contents",id:"contents",level:2},{value:"Alpha Channel",id:"alpha-channel",level:2},{value:"Layout",id:"layout",level:2}],c={toc:p},u="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This document describes the PAL file format used in the Ragnarok Online client."),(0,n.kt)("h2",{id:"contents"},"Contents"),(0,n.kt)("p",null,"PAL files are alternative ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Palette_(computing)"},"color palettes")," used to tint sprites. To be specific:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"An array of 256 8-bit RGBA color values is appended at the end of any (modern) ",(0,n.kt)("a",{parentName:"li",href:"/file-formats/spr"},"SPR"),' sprite - the "default palette"'),(0,n.kt)("li",{parentName:"ul"},"All standalone PAL files found in the game client are using exactly the same format, which makes it easy to recolor sprites"),(0,n.kt)("li",{parentName:"ul"},"The client can swap any one of them in to replace the default palette, with certain palettes matching specific sprites")),(0,n.kt)("p",null,"All the same limitations apply to the default and alternative palettes - that is to say, transparency isn't supported."),(0,n.kt)("h2",{id:"alpha-channel"},"Alpha Channel"),(0,n.kt)("p",null,"Transparency is determined for each color according to its RGBA values, after loading the palette:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The color stored at palette index 0 is considered the transparent background color - usually red, green, or magenta"),(0,n.kt)("li",{parentName:"ul"},'Colors that are "close" to the transparency color might also be rendered transparent (warning: unverified claim)'),(0,n.kt)("li",{parentName:"ul"},"If a palette contains alpha values, they appear to be ignored in favor of the actual transparency color")),(0,n.kt)("p",null,"The exact behavior requires some verification still, but a possible approach was described ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/rdw-archive/RagnarokFileFormats/blob/master/PAL.MD"},"here")," (might be incorrect, though)."),(0,n.kt)("h2",{id:"layout"},"Layout"),(0,n.kt)("p",null,"See the ",(0,n.kt)("inlineCode",{parentName:"p"},"ColorPalette")," field in the ",(0,n.kt)("a",{parentName:"p",href:"/file-formats/spr#layout"},"SPR layout table"),". Any SPR file above version ",(0,n.kt)("inlineCode",{parentName:"p"},"1.1")," includes a default palette (i.e., all of them do)."))}f.isMDXComponent=!0}}]);