"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[636],{111:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>r,metadata:()=>d,toc:()=>h});var s=n(4848),i=n(8453);const r={slug:"/file-formats/spr",title:"SPR"},l=void 0,d={id:"file-formats/SPR",title:"SPR",description:"This document describes the SPR file format used in the Ragnarok Online client (and Arcturus).",source:"@site/docs/file-formats/SPR.md",sourceDirName:"file-formats",slug:"/file-formats/spr",permalink:"/file-formats/spr",draft:!1,unlisted:!1,editUrl:"https://github.com/RagnarokResearchLab/ragnarokresearchlab.github.io/edit/main/docs/file-formats/SPR.md",tags:[],version:"current",frontMatter:{slug:"/file-formats/spr",title:"SPR"},sidebar:"tutorialSidebar",previous:{title:"RSW",permalink:"/file-formats/rsw"},next:{title:"STR (Placeholder)",permalink:"/file-formats/str"}},c={},h=[{value:"Contents",id:"contents",level:2},{value:"Features",id:"features",level:2},{value:"Bitmap Color Palette",id:"bitmap-color-palette",level:3},{value:"Run-Length Encoding",id:"run-length-encoding",level:3},{value:"Transparency",id:"transparency",level:3},{value:"Layout",id:"layout",level:2},{value:"Version 1.1",id:"version-11",level:3},{value:"Bitmap Sprites",id:"bitmap-sprites",level:4},{value:"Version 2.0",id:"version-20",level:3},{value:"Truecolor Sprites",id:"truecolor-sprites",level:4},{value:"Version 2.1",id:"version-21",level:3},{value:"Compressed Bitmap Sprites",id:"compressed-bitmap-sprites",level:4}];function x(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"This document describes the SPR file format used in the Ragnarok Online client (and Arcturus)."}),"\n",(0,s.jsx)(t.h2,{id:"contents",children:"Contents"}),"\n",(0,s.jsx)(t.p,{children:"SPR files contain the following information:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Sprites, icons, and other graphics rendered by the game (either inside the world or as part of the UI)"}),"\n",(0,s.jsx)(t.li,{children:'Indexed-color bitmaps and their respective color palettes, here called the "BMP segment"'}),"\n",(0,s.jsx)(t.li,{children:'Truecolor images with transparency values for each pixel, here called the "TGA segment"'}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["The file contents can be interpreted as a ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Texture_atlas",children:"spritesheet"})," and combined with ",(0,s.jsx)(t.a,{href:"/file-formats/act",children:"ACT files"})," to implement animated sprites."]}),"\n",(0,s.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,s.jsx)(t.h3,{id:"bitmap-color-palette",children:"Bitmap Color Palette"}),"\n",(0,s.jsxs)(t.p,{children:["Instead of encoding the RGBA pixels directly, the BMP segment of the file uses a ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Palette_(computing)",children:"color palette"})," with up to 256 colors:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"In the image data, each byte corresponds to an entry in this lookup table"}),"\n",(0,s.jsx)(t.li,{children:"Entry 0 is always the (transparent) background color, regardless of its alpha value"}),"\n",(0,s.jsx)(t.li,{children:"Even if present, alpha values are otherwise not supported and should be ignored"}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["The palette included in the SPR file is the default palette. It's possible to load in ",(0,s.jsx)(t.a,{href:"/file-formats/pal",children:"PAL"})," files to recolor a given sprite."]}),"\n",(0,s.jsx)(t.h3,{id:"run-length-encoding",children:"Run-Length Encoding"}),"\n",(0,s.jsx)(t.p,{children:"Because most sprites include a significant number of (transparent) background pixels, later versions of the format employ a primitive compression scheme to reduce the number of identical palette indices that have to be stored in the BMP segment."}),"\n",(0,s.jsxs)(t.p,{children:["The method is chiefly known as ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Run-length_encoding",children:"RLE"})," because it works by encoding runs (here: of zero bytes, which refer to the palette index 0 - the transparent background color) into a two-byte shorthand: First, a zero-byte that indicates the start of a run, and then the number of encoded zero bytes. Decompression simply requires inserting the same number of zeroes into the output stream."]}),"\n",(0,s.jsx)(t.p,{children:"If that sounds confusing, here's some examples:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["If the image contained five background pixels, you'll see ",(0,s.jsx)(t.code,{children:"00 05"}),', which stands for "emit zero, five times"']}),"\n",(0,s.jsxs)(t.li,{children:["The bytes ",(0,s.jsx)(t.code,{children:'"ABC"'})," (",(0,s.jsx)(t.code,{children:"65 66 67"}),') are "decompressed" to the same sequence as there\'s no encoded run present']}),"\n",(0,s.jsxs)(t.li,{children:["A single zero byte must be encoded as ",(0,s.jsx)(t.code,{children:"00 01"}),' ("emit zero, one time") - meaning that ',(0,s.jsx)(t.code,{children:"00 00"})," is not allowed"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This feature isn't used for the truecolor (TGA) segments as pixels are stored in ABGR format, in which repetition is less common."}),"\n",(0,s.jsx)(t.h3,{id:"transparency",children:"Transparency"}),"\n",(0,s.jsx)(t.p,{children:"Alpha values in the BMP palette are completely ignored. RGBA colors will be stored raw and not premultiplied."}),"\n",(0,s.jsx)(t.p,{children:'The color with palette index 0 should be considered the "background color". It must be cleared manually, though.'}),"\n",(0,s.jsx)(t.h2,{id:"layout",children:"Layout"}),"\n",(0,s.jsx)(t.h3,{id:"version-11",children:"Version 1.1"}),"\n",(0,s.jsxs)(t.p,{children:["This most basic variant only supports BMP sprites. It's used in ",(0,s.jsx)(t.a,{href:"/arcturus",children:"Arcturus"}),", but not in any known version of the RO client."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Field"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Offset"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Length"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"Header"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"0"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"string"})}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,s.jsx)(t.code,{children:'"SP"'})," as an ASCII-encoded, fixed-size string"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"MinorVersion"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"1"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"byte"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Versioning information"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"MajorVersion"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"3"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"1"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"byte"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Versioning information"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"BitmapImageCount"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"4"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ushort"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"How many images are stored in the BMP segment"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"BitmapSprites"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"6"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"variable"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"array"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Indexed-color sprite images; pixels are stored as palette indices"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ColorPalette"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"variable"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"1024"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"array"})}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:["RGBA pixel colors (",(0,s.jsx)(t.code,{children:"byte"})," values); always stored at the end of the file"]})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"bitmap-sprites",children:"Bitmap Sprites"}),"\n",(0,s.jsx)(t.p,{children:"This repeating structure contains the raw pixel data in the form of references to palette entries that need to be resolved."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Field"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Offset"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Length"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ImageWidth"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"0"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"short"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"The width of the sprite image, given in pixels"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ImageHeight"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"short"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"The height of the sprite image, given in pixels"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"PaletteIndices"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"4"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"variable"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"array"})}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:["Array of indexed-color palette indices (",(0,s.jsx)(t.code,{children:"byte"})," values)"]})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:["A size of ",(0,s.jsx)(t.code,{children:"-1, -1"})," (",(0,s.jsx)(t.code,{children:"FF FF FF FF"}),") indicates an invalid image, which consists of a single pixel that can (probably) be discarded."]}),"\n",(0,s.jsx)(t.h3,{id:"version-20",children:"Version 2.0"}),"\n",(0,s.jsx)(t.p,{children:"This version adds the ability to store truecolor images (RGBA pixels with an alpha channel). It appears in RO and Arcturus."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Field"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Offset"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Length"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"Header"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"0"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"string"})}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,s.jsx)(t.code,{children:'"SP"'})," as an ASCII-encoded, fixed-size string"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"MinorVersion"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"1"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"byte"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Versioning information"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"MajorVersion"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"3"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"1"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"byte"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Versioning information"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"BitmapImageCount"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"4"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ushort"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"How many images are stored in the BMP segment"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"TruecolorImageCount"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"6"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ushort"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"How many images are stored in the TGA segment"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"BitmapSprites"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"8"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"variable"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"array"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Indexed-color sprite images; pixels are stored as palette indices"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"TruecolorSprites"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"variable"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"variable"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"array"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Truecolor sprite images; pixels are stored raw (in order ABGR)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ColorPalette"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"variable"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"1024"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"array"})}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:["RGBA pixel colors (",(0,s.jsx)(t.code,{children:"byte"})," values); always stored at the end of the file"]})]})]})]}),"\n",(0,s.jsx)(t.h4,{id:"truecolor-sprites",children:"Truecolor Sprites"}),"\n",(0,s.jsx)(t.p,{children:"This repeating structure contains the raw pixel data in an uncompressed form."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Field"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Offset"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Length"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ImageWidth"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"0"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"short"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"The width of the sprite image, given in pixels"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ImageHeight"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"4"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"short"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"The height of the sprite image, given in pixels"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"PixelBuffer"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"6"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"variable"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"array"})}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:["Array of raw ABGR image data (",(0,s.jsx)(t.code,{children:"byte"})," values)"]})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"version-21",children:"Version 2.1"}),"\n",(0,s.jsxs)(t.p,{children:["This version adds compression (via ",(0,s.jsx)(t.a,{href:"#run-length-encoding",children:"RLE"}),") for images in the BMP segment of the file. It's used in all modern RO clients."]}),"\n",(0,s.jsx)(t.h4,{id:"compressed-bitmap-sprites",children:"Compressed Bitmap Sprites"}),"\n",(0,s.jsx)(t.p,{children:"The only difference here is that runs of zero palette indices (i.e., multiple background pixels) are RLE-compressed."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Field"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Offset"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Length"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ImageWidth"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"0"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"short"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"The width of the sprite image, given in pixels"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ImageHeight"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"short"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"The height of the sprite image, given in pixels"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"CompressedBufferSize"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"4"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"ushort"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"How many bytes to feed into the RLE decompressor"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"CompressedPaletteIndices"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"6"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"variable"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:(0,s.jsx)(t.code,{children:"array"})}),(0,s.jsxs)(t.td,{style:{textAlign:"center"},children:["RLE-compressed indexed-color palette indices (",(0,s.jsx)(t.code,{children:"byte"})," values)"]})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:["The size of the decompressed image is still ",(0,s.jsx)(t.code,{children:"ImageWidth * ImageHeight"}),", but you must read ",(0,s.jsx)(t.code,{children:"CompressedBufferSize"})," bytes only."]})]})}function o(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>d});var s=n(6540);const i={},r=s.createContext(i);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);