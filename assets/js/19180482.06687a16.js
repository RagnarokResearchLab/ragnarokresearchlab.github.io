"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6312],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=d(n),k=r,g=s["".concat(p,".").concat(k)]||s[k]||c[k]||i;return n?a.createElement(g,l(l({ref:t},m),{},{components:n})):a.createElement(g,l({ref:t},m))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[s]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},5429:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const i={slug:"/file-formats/spr",title:"SPR Format Specification"},l=void 0,o={unversionedId:"file-formats/SPR",id:"file-formats/SPR",title:"SPR Format Specification",description:"This document describes the SPR file format used in the Ragnarok Online client (and Arcturus).",source:"@site/docs/file-formats/SPR.md",sourceDirName:"file-formats",slug:"/file-formats/spr",permalink:"/file-formats/spr",draft:!1,editUrl:"https://github.com/RagnarokResearchLab/ragnarokresearchlab.github.io/edit/main/docs/file-formats/SPR.md",tags:[],version:"current",frontMatter:{slug:"/file-formats/spr",title:"SPR Format Specification"},sidebar:"tutorialSidebar",previous:{title:"SCR (Placeholder)",permalink:"/file-formats/scr"},next:{title:"STR (Placeholder)",permalink:"/file-formats/str"}},p={},d=[{value:"Contents",id:"contents",level:2},{value:"Features",id:"features",level:2},{value:"Bitmap Color Palette",id:"bitmap-color-palette",level:3},{value:"Run-Length Encoding",id:"run-length-encoding",level:3},{value:"Transparency",id:"transparency",level:3},{value:"Layout",id:"layout",level:2},{value:"Version 1.1",id:"version-11",level:3},{value:"Bitmap Sprites",id:"bitmap-sprites",level:4},{value:"Version 2.0",id:"version-20",level:3},{value:"Truecolor Sprites",id:"truecolor-sprites",level:4},{value:"Version 2.1",id:"version-21",level:3},{value:"Compressed Bitmap Sprites",id:"compressed-bitmap-sprites",level:4}],m={toc:d},s="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This document describes the SPR file format used in the Ragnarok Online client (and Arcturus)."),(0,r.kt)("h2",{id:"contents"},"Contents"),(0,r.kt)("p",null,"SPR files contain the following information:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Sprites, icons, and other graphics rendered by the game (either inside the world or as part of the UI)"),(0,r.kt)("li",{parentName:"ul"},'Indexed-color bitmaps and their respective color palettes, here called the "BMP segment"'),(0,r.kt)("li",{parentName:"ul"},'Truecolor images with transparency values for each pixel, here called the "TGA segment"')),(0,r.kt)("p",null,"The file contents can be interpreted as a ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Texture_atlas"},"spritesheet")," and combined with ",(0,r.kt)("a",{parentName:"p",href:"/file-formats/act"},"ACT files")," to implement animated sprites."),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("h3",{id:"bitmap-color-palette"},"Bitmap Color Palette"),(0,r.kt)("p",null,"Instead of encoding the RGBA pixels directly, the BMP segment of the file uses a ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Palette_(computing)"},"color palette")," with up to 256 colors:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In the image data, each byte corresponds to an entry in this lookup table"),(0,r.kt)("li",{parentName:"ul"},"Entry 0 is always the (transparent) background color, regardless of its alpha value"),(0,r.kt)("li",{parentName:"ul"},"Even if present, alpha values are otherwise not supported and should be ignored")),(0,r.kt)("p",null,"The palette included in the SPR file is the default palette. It's possible to load in ",(0,r.kt)("a",{parentName:"p",href:"/file-formats/pal"},"PAL")," files to recolor a given sprite."),(0,r.kt)("h3",{id:"run-length-encoding"},"Run-Length Encoding"),(0,r.kt)("p",null,"Because most sprites include a significant number of (transparent) background pixels, later versions of the format employ a primitive compression scheme to reduce the number of identical palette indices that have to be stored in the BMP segment."),(0,r.kt)("p",null,"The method is chiefly known as ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Run-length_encoding"},"RLE")," because it works by encoding runs (here: of zero bytes, which refer to the palette index 0 - the transparent background color) into a two-byte shorthand: First, a zero-byte that indicates the start of a run, and then the number of encoded zero bytes. Decompression simply requires inserting the same number of zeroes into the output stream."),(0,r.kt)("p",null,"If that sounds confusing, here's some examples:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If the image contained five background pixels, you'll see ",(0,r.kt)("inlineCode",{parentName:"li"},"00 05"),', which stands for "emit zero, five times"'),(0,r.kt)("li",{parentName:"ul"},"The bytes ",(0,r.kt)("inlineCode",{parentName:"li"},'"ABC"')," (",(0,r.kt)("inlineCode",{parentName:"li"},"65 66 67"),') are "decompressed" to the same sequence as there\'s no encoded run present'),(0,r.kt)("li",{parentName:"ul"},"A single zero byte must be encoded as ",(0,r.kt)("inlineCode",{parentName:"li"},"00 01"),' ("emit zero, one time") - meaning that ',(0,r.kt)("inlineCode",{parentName:"li"},"00 00")," is not allowed")),(0,r.kt)("p",null,"This feature isn't used for the truecolor (TGA) segments as pixels are stored in ABGR format, in which repetition is less common."),(0,r.kt)("h3",{id:"transparency"},"Transparency"),(0,r.kt)("p",null,"Alpha values in the BMP palette are completely ignored. RGBA colors will be stored raw and not premultiplied."),(0,r.kt)("p",null,'The color with palette index 0 should be considered the "background color". It must be cleared manually, though.'),(0,r.kt)("h2",{id:"layout"},"Layout"),(0,r.kt)("h3",{id:"version-11"},"Version 1.1"),(0,r.kt)("p",null,"This most basic variant only supports BMP sprites. It's used in ",(0,r.kt)("a",{parentName:"p",href:"/arcturus"},"Arcturus"),", but not in any known version of the RO client."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Offset"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Length"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"Header")),(0,r.kt)("td",{parentName:"tr",align:"center"},"0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'"SP"')," as an ASCII-encoded, fixed-size string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"MinorVersion")),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},"1"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"byte")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Versioning information")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"MajorVersion")),(0,r.kt)("td",{parentName:"tr",align:"center"},"3"),(0,r.kt)("td",{parentName:"tr",align:"center"},"1"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"byte")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Versioning information")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"BitmapImageCount")),(0,r.kt)("td",{parentName:"tr",align:"center"},"4"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ushort")),(0,r.kt)("td",{parentName:"tr",align:"center"},"How many images are stored in the BMP segment")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"BitmapSprites")),(0,r.kt)("td",{parentName:"tr",align:"center"},"6"),(0,r.kt)("td",{parentName:"tr",align:"center"},"variable"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"array")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Indexed-color sprite images; pixels are stored as palette indices")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ColorPalette")),(0,r.kt)("td",{parentName:"tr",align:"center"},"variable"),(0,r.kt)("td",{parentName:"tr",align:"center"},"1024"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"array")),(0,r.kt)("td",{parentName:"tr",align:"center"},"RGBA pixel colors (",(0,r.kt)("inlineCode",{parentName:"td"},"byte")," values); always stored at the end of the file")))),(0,r.kt)("h4",{id:"bitmap-sprites"},"Bitmap Sprites"),(0,r.kt)("p",null,"This repeating structure contains the raw pixel data in the form of references to palette entries that need to be resolved."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Offset"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Length"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ImageWidth")),(0,r.kt)("td",{parentName:"tr",align:"center"},"0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"short")),(0,r.kt)("td",{parentName:"tr",align:"center"},"The width of the sprite image, given in pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ImageHeight")),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"short")),(0,r.kt)("td",{parentName:"tr",align:"center"},"The height of the sprite image, given in pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"PaletteIndices")),(0,r.kt)("td",{parentName:"tr",align:"center"},"4"),(0,r.kt)("td",{parentName:"tr",align:"center"},"variable"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"array")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Array of indexed-color palette indices (",(0,r.kt)("inlineCode",{parentName:"td"},"byte")," values)")))),(0,r.kt)("p",null,"A size of ",(0,r.kt)("inlineCode",{parentName:"p"},"-1, -1")," (",(0,r.kt)("inlineCode",{parentName:"p"},"FF FF FF FF"),") indicates an invalid image, which consists of a single pixel that can (probably) be discarded."),(0,r.kt)("h3",{id:"version-20"},"Version 2.0"),(0,r.kt)("p",null,"This version adds the ability to store truecolor images (RGBA pixels with an alpha channel). It appears in RO and Arcturus."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Offset"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Length"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"Header")),(0,r.kt)("td",{parentName:"tr",align:"center"},"0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'"SP"')," as an ASCII-encoded, fixed-size string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"MinorVersion")),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},"1"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"byte")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Versioning information")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"MajorVersion")),(0,r.kt)("td",{parentName:"tr",align:"center"},"3"),(0,r.kt)("td",{parentName:"tr",align:"center"},"1"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"byte")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Versioning information")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"BitmapImageCount")),(0,r.kt)("td",{parentName:"tr",align:"center"},"4"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ushort")),(0,r.kt)("td",{parentName:"tr",align:"center"},"How many images are stored in the BMP segment")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"TruecolorImageCount")),(0,r.kt)("td",{parentName:"tr",align:"center"},"6"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ushort")),(0,r.kt)("td",{parentName:"tr",align:"center"},"How many images are stored in the TGA segment")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"BitmapSprites")),(0,r.kt)("td",{parentName:"tr",align:"center"},"8"),(0,r.kt)("td",{parentName:"tr",align:"center"},"variable"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"array")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Indexed-color sprite images; pixels are stored as palette indices")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"TruecolorSprites")),(0,r.kt)("td",{parentName:"tr",align:"center"},"variable"),(0,r.kt)("td",{parentName:"tr",align:"center"},"variable"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"array")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Truecolor sprite images; pixels are stored raw (in order ABGR)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ColorPalette")),(0,r.kt)("td",{parentName:"tr",align:"center"},"variable"),(0,r.kt)("td",{parentName:"tr",align:"center"},"1024"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"array")),(0,r.kt)("td",{parentName:"tr",align:"center"},"RGBA pixel colors (",(0,r.kt)("inlineCode",{parentName:"td"},"byte")," values); always stored at the end of the file")))),(0,r.kt)("h4",{id:"truecolor-sprites"},"Truecolor Sprites"),(0,r.kt)("p",null,"This repeating structure contains the raw pixel data in an uncompressed form."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Offset"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Length"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ImageWidth")),(0,r.kt)("td",{parentName:"tr",align:"center"},"0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"short")),(0,r.kt)("td",{parentName:"tr",align:"center"},"The width of the sprite image, given in pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ImageHeight")),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},"4"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"short")),(0,r.kt)("td",{parentName:"tr",align:"center"},"The height of the sprite image, given in pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"PixelBuffer")),(0,r.kt)("td",{parentName:"tr",align:"center"},"6"),(0,r.kt)("td",{parentName:"tr",align:"center"},"variable"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"array")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Array of raw ABGR image data (",(0,r.kt)("inlineCode",{parentName:"td"},"byte")," values)")))),(0,r.kt)("h3",{id:"version-21"},"Version 2.1"),(0,r.kt)("p",null,"This version adds compression (via ",(0,r.kt)("a",{parentName:"p",href:"#run-length-encoding"},"RLE"),") for images in the BMP segment of the file. It's used in all modern RO clients."),(0,r.kt)("h4",{id:"compressed-bitmap-sprites"},"Compressed Bitmap Sprites"),(0,r.kt)("p",null,"The only difference here is that runs of zero palette indices (i.e., multiple background pixels) are RLE-compressed."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Field"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Offset"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Length"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ImageWidth")),(0,r.kt)("td",{parentName:"tr",align:"center"},"0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"short")),(0,r.kt)("td",{parentName:"tr",align:"center"},"The width of the sprite image, given in pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ImageHeight")),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"short")),(0,r.kt)("td",{parentName:"tr",align:"center"},"The height of the sprite image, given in pixels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"CompressedBufferSize")),(0,r.kt)("td",{parentName:"tr",align:"center"},"4"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ushort")),(0,r.kt)("td",{parentName:"tr",align:"center"},"How many bytes to feed into the RLE decompressor")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"CompressedPaletteIndices")),(0,r.kt)("td",{parentName:"tr",align:"center"},"6"),(0,r.kt)("td",{parentName:"tr",align:"center"},"variable"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"array")),(0,r.kt)("td",{parentName:"tr",align:"center"},"RLE-compressed indexed-color palette indices (",(0,r.kt)("inlineCode",{parentName:"td"},"byte")," values)")))),(0,r.kt)("p",null,"The size of the decompressed image is still ",(0,r.kt)("inlineCode",{parentName:"p"},"ImageWidth * ImageHeight"),", but you must read ",(0,r.kt)("inlineCode",{parentName:"p"},"CompressedBufferSize")," bytes only."))}c.isMDXComponent=!0}}]);