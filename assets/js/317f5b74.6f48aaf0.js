"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1656],{696:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var i=n(4848),s=n(8453);const a={sidebar_position:3,slug:"/game-mechanics/movement",title:"Movement and Pathfinding"},l=void 0,r={id:"game-mechanics/movement-and-pathfinding",title:"Movement and Pathfinding",description:"This document describes how Ragnarok Online's zone servers implement the movement of ingame actors.",source:"@site/docs/game-mechanics/03-movement-and-pathfinding.md",sourceDirName:"game-mechanics",slug:"/game-mechanics/movement",permalink:"/game-mechanics/movement",draft:!1,unlisted:!1,editUrl:"https://github.com/RagnarokResearchLab/ragnarokresearchlab.github.io/edit/main/docs/game-mechanics/03-movement-and-pathfinding.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,slug:"/game-mechanics/movement",title:"Movement and Pathfinding"},sidebar:"tutorialSidebar",previous:{title:"World State Updates",permalink:"/game-mechanics/world-state-updates"},next:{title:"Creature AI and Skillsets",permalink:"/game-mechanics/creature-ai"}},o={},d=[{value:"Movement Speed",id:"movement-speed",level:2},{value:"Unit of Measurement",id:"unit-of-measurement",level:3},{value:"Examples",id:"examples",level:3},{value:"Statistics",id:"statistics",level:3},{value:"Pathfinding",id:"pathfinding",level:2},{value:"Hit Stun",id:"hit-stun",level:2}];function c(e){const t={admonition:"admonition",blockquote:"blockquote",em:"em",h2:"h2",h3:"h3",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"This document describes how Ragnarok Online's zone servers implement the movement of ingame actors."}),"\n",(0,i.jsx)(t.h2,{id:"movement-speed",children:"Movement Speed"}),"\n",(0,i.jsx)(t.p,{children:"All actors have a movement speed value that determines how fast they move around the game world."}),"\n",(0,i.jsx)(t.h3,{id:"unit-of-measurement",children:"Unit of Measurement"}),"\n",(0,i.jsx)(t.admonition,{type:"caution",children:(0,i.jsx)(t.p,{children:"This section contains unverified information and/or speculation. It may or may not be completely wrong."})}),"\n",(0,i.jsx)(t.p,{children:'Movement speeds are given in the unit of "milliseconds taken to move to the next adjacent tile" (i.e., a distance of one world unit). This should be interpreted as "delay after moving to the next ground tile", since movement happens instantaneously:'}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:"On aegis you move to the target cell instantly, then animate the movement where [on] emulators you animate first and arrive second"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Source: Kokotewa (no direct link available)"})}),"\n",(0,i.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Creature"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Movement Speed (ms)"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Perceived Speed"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Red Plant"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"2000"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Immobile[^1] (extremely slow if glitched)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Pupa"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"1000"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Immobile[^1] (very slow if glitched)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Zombie"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"400"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Moves slowly"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Osiris"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"100"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Very fast"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Treasure Box"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"0"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Cannot move at all"})]})]})]}),"\n",(0,i.jsx)(t.p,{children:"[^1] Immobile creatures can still technically move (at their configured speed), but this is almost certainly a bug."}),"\n",(0,i.jsx)(t.h3,{id:"statistics",children:"Statistics"}),"\n",(0,i.jsx)(t.admonition,{type:"caution",children:(0,i.jsx)(t.p,{children:"This section needs a review. The information may be outdated, incomplete, or factually incorrect."})}),"\n",(0,i.jsx)(t.p,{children:"Most creatures appear to use speed values between 150 and 400 ms. Immobile creatures always seem to use 1000 or 2000 ms."}),"\n",(0,i.jsx)(t.h2,{id:"pathfinding",children:"Pathfinding"}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"This section is a placeholder. If you know anything about the topic, please help fill it with content!"})}),"\n",(0,i.jsx)(t.h2,{id:"hit-stun",children:"Hit Stun"}),"\n",(0,i.jsx)(t.p,{children:'When damaged, actors usually [^2] cannot move for a brief period of time, effectively "stunning" them when they suffer a "hit". Afterwards, movement commences on the precomputed path unless their position has been altered via knockback effects.'}),"\n",(0,i.jsx)(t.p,{children:"[^2] Certain auras, like Endure, can make them immune to this mechanic."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function l(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);